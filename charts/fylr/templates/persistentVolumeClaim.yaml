{{ $firstDiskName := (include "fylr.storage.volumes.asset.name" .) }}
{{ $secondDiskName := (include "fylr.storage.volumes.version.name" .) }}
{{ $thirdDiskName := (include "fylr.storage.volumes.backup.name" .) }}
{{ $tmpDiskName := (include "fylr.storage.volumes.tmp.name" .) }}

{{ $helmValues := . }}

{{ $persistent := .Values.fylr.persistent }}
{{- range $key, $val := $persistent.definitions -}}
{{- if eq $val.kind "disk" -}}
{{/* check whether the key matches any default rule, if so, we add a mount path to it */}}
{{- if or (eq $key $persistent.defaults.originals) (eq $key $persistent.defaults.versions) (eq $key $persistent.defaults.backups) -}}

{{/* check if key is defined as original */}}
{{- if eq $key $persistent.defaults.originals -}}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $firstDiskName | quote }}
  annotations:
    helm.sh/resource-policy: keep
  labels:
    {{- include "fylr.labels" $helmValues | nindent 4 }}
spec:
  accessModes:
    {{- toYaml $val.disk.accessModes | nindent 4 }}
  resources:
    requests:
      storage: {{ $val.disk.size }}
  storageClassName: {{ $val.disk.storageClass }}
{{/* end if is originals */}}
{{- end -}}

{{/* check if key is defined as versions */}}
{{- if and (eq $key $persistent.defaults.versions) (ne $key $persistent.defaults.originals) -}}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $secondDiskName | quote }}
  annotations:
    helm.sh/resource-policy: keep
  labels:
    {{- include "fylr.labels" $helmValues | nindent 4 }}
spec:
  accessModes:
    {{- toYaml $val.disk.accessModes | nindent 4 }}
  resources:
    requests:
      storage: {{ $val.disk.size }}
  storageClassName: {{ $val.disk.storageClass }}
{{/* end if and is versions and not originals*/}}
{{- end -}}

{{/* check if key is defined as backups */}}
{{- if and (eq $key $persistent.defaults.backups) (ne $key $persistent.defaults.versions) (ne $key $persistent.defaults.originals) -}}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $thirdDiskName | quote }}
  annotations:
    helm.sh/resource-policy: keep
  labels:
    {{- include "fylr.labels" $helmValues | nindent 4 }}
spec:
  accessModes:
    {{- toYaml $val.disk.accessModes | nindent 4 }}
  resources:
    requests:
      storage: {{ $val.disk.size }}
  storageClassName: {{ $val.disk.storageClass }}
{{/* end if and is versions and not originals*/}}
{{- end -}}

{{/* end if or originals, versions, backups */}}
{{- end -}}
{{/* end if kind is disk */}}
{{- end -}}
{{/* end loop */}}
{{- end -}}

# tmp persistant volumes claims
{{/* check if persistance of tmp is enabled */}}
{{- if .Values.fylr.persistent.tmp.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $tmpDiskName | quote }}
  annotations:
    helm.sh/resource-policy: keep
  labels:
    {{- include "fylr.labels" $helmValues | nindent 4 }}
spec:
  accessModes:
    {{- toYaml .Values.fylr.persistent.tmp.accessModes | nindent 4 }}
  resources:
    requests:
      storage: {{ .Values.fylr.persistent.tmp.size }}
  storageClassName: {{ .Values.fylr.persistent.tmp.storageClass }}
{{/* end if the tmp persistance is enabled */}}
{{- end -}}