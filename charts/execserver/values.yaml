# Default values for execserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.fylr.io/fylr/fylr
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8070

monitoring:
  service:
    enabled: false
    interval: "30s"
  pod:
    enabled: false
    interval: "30s"

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

fylr:
  logger:
    # format can be: console or json
    format: console
    # level can be: debug, info, warn, error, fatal, panic
    level: info
    timeFormat: "2006-01-02T15:04:05Z07:00"
    noColor: false
    addHostname: true
  execserver:
    waitGroups:
      a: 1
      b: 1
      c: 1
      # ...
    services:
      node:
        enabled: true
        waitGroup: b
      convert:
        waitGroup: a
      ffmpeg:
        enabled: true
        waitGroup: a
      soffice:
        enabled: true
        waitGroup: c
      pdf2pages:
        enabled: true
        waitGroup: a
      xslt:
        enabled: true
        waitGroup: a
      copy:
        enabled: true
        waitGroup: a
      metadata:
        enabled: true
        waitGroup: a
      iiif:
        enabled: true
        waitGroup: a
