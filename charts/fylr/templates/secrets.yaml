apiVersion: v1
kind: Secret
metadata:
  name: {{ include "fylr.secret.db.name" . }}
type: Opaque
data:
  driver: {{ .Values.fylr.db.driver | b64enc | quote }}
  dsn: {{ .Values.fylr.db.dsn | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "fylr.secret.elastic.name" . }}
type: Opaque
data:
  {{ if .Values.elasticsearch.enabled }}
  username: ""
  password: ""
  hosts: '["http://{{ .Values.elasticsearch.projectName }}-elasticsearch.{{ .Release.Namespace }}.svc:9200"]'
  {{ else }}
  username: {{ .Values.fylr.elastic.username | b64enc | quote }}
  password: {{ .Values.fylr.elastic.password | b64enc | quote }}
  hosts: {{ .Values.fylr.elastic.hosts | toJson | b64enc | quote }}
  {{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "fylr.secret.s3.name" . }}
type: Opaque
data:
  {{ if .Values.minio.enabled }}
  CFG_FYLR_DB_INIT_LOCATIONS_S3_CONFIG_S3_ENDPOINT: ""
  CFG_FYLR_DB_INIT_LOCATIONS_S3_CONFIG_S3_ACCESSKEY: "{{ (index .Values.minio.users 0).accessKey }}"
  CFG_FYLR_DB_INIT_LOCATIONS_S3_CONFIG_S3_SECRETKEY: "{{ (index .Values.minio.users 0).secretKey }}"
  CFG_FYLR_DB_INIT_LOCATIONS_S3_CONFIG_S3_REGION: 'us-east-1'
  {{- if .Values.minio.ingress.enabled }}
  AWS_S3_UPLOAD_BUCKET_URL: '{{ if eq (len .Values.minio.ingress.tls) 0 }}http{{ else }}https{{ end }}://{{ (index .Values.minio.ingress.hosts 0) }}'
  {{- else }}
  AWS_S3_UPLOAD_BUCKET_URL: 'http://{{ include "outline.fullname" . }}-{{ .Values.minio.projectName }}.{{ .Release.Namespace }}.svc:9000'
  {{- end }}
  CFG_FYLR_DB_INIT_LOCATIONS_S3_CONFIG_S3_BUCKET: "{{ (index .Values.minio.buckets 0).name }}"
  CFG_FYLR_DB_INIT_LOCATIONS_S3_CONFIG_S3_SSL: "{{ if eq (len .Values.minio.ingress.tls) 0 }}off{{ else }}on{{ end }}"
  CFG_FYLR_DB_INIT_LOCATIONS_S3_KIND: "s3"
  CFG_FYLR_DB_INIT_LOCATIONS_S3_PREFIX: ""
  CFG_FYLR_DB_INIT_LOCATIONS_S3_ALLOW_PURGE: "true"
  {{ else }}
  {{- range $key, $value := .Values.fylr.db.init.locations }}
  CFG_FYLR_DB_INIT_LOCATIONS_{{ $value.name | upper }}_CONFIG_S3_ENDPOINT: {{ $value.config.s3.endpoint | b64enc | quote }}
  CFG_FYLR_DB_INIT_LOCATIONS_{{ $value.name | upper }}_CONFIG_S3_ACCESSKEY: {{ $value.config.s3.accessKey | b64enc | quote }}
  CFG_FYLR_DB_INIT_LOCATIONS_{{ $value.name | upper }}_CONFIG_S3_SECRETKEY: {{ $value.config.s3.secretKey | b64enc | quote }}
  CFG_FYLR_DB_INIT_LOCATIONS_{{ $value.name | upper }}_CONFIG_S3_REGION: {{ $value.config.s3.region | b64enc | quote }}
  CFG_FYLR_DB_INIT_LOCATIONS_{{ $value.name | upper }}_CONFIG_S3_BUCKET: {{ $value.config.s3.bucket | b64enc | quote }}
  CFG_FYLR_DB_INIT_LOCATIONS_{{ $value.name | upper }}_CONFIG_S3_SSL: {{ if $value.config.s3.ssl }}{{ print "on" | b64enc | quote }}{{ else }}{{ print "off" | b64enc | quote }}{{ end }}
  CFG_FYLR_DB_INIT_LOCATIONS_{{ $value.name | upper }}_KIND: {{ print "s3" | b64enc | quote }}
  CFG_FYLR_DB_INIT_LOCATIONS_{{ $value.name | upper }}_PREFIX: {{ $value.pathPrefix | b64enc | quote }}
  CFG_FYLR_DB_INIT_LOCATIONS_{{ $value.name | upper }}_ALLOW_PURGE: {{ $value.allowPurge | quote | b64enc | quote }}
  {{- end }}
  {{ end }}
