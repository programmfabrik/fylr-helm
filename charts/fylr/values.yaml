# Default values for fylr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.fylr.io/fylr/fylr-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v6.1.0-beta.5"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

services:
  webapp:
    type: ClusterIP
    port: 8080
  api:
    type: ClusterIP
    port: 8081
  backend:
    type: ClusterIP
    port: 8082

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

fylr:
  # public external url of the server. This url needs to be fully qualified
  externalURL: ""
  # encryptionKey is used to AES-encrypt sensitive information before writing it
  # to the database. It must be 32 bytes long. Default is empty.
  encryptionKey: "d4b207ce131411ed8c7300155dd22658"
  # set to true to allow /api/settings/purge. should be disabled for production!
  allowPurge: true
  logger:
    # format is the format of the logs. Valid values are "json" and "console".
    format: "console"
    # level is the minimum level of logs to be logged. Valid values are "trace", "debug", "info", "warn", "error", "fatal", "panic".
    level: "info"
    # timeFormat is the Go representation to format the time in the log output.
    # zerolog's time keeping resolution is always set to milliseconds by FYLR.
    # Use "", "UNIXMS" or "UNIXMICRO" to output a unix timestamp (json format only).
    # Defaults to "2006-01-02 15:04:05"
    timeFormat: "2006-01-02 15:04:05"
    # noColor disables colorized output.
    noColor: false
    # addHostname adds the hostname to the logs.
    addHostname: true
  db:
    driver: "postgres"
    dsn: "postgres://fylr:password@localhost:5432/fylr?sslmode=disable"
    # https://golang.org/pkg/database/sql/#DB.SetMaxOpenConns, default: 0
    # This has to be at 4 + execserver.parallel + elastic.parallel. Two of these
    # connections will be dedicated to a separate connection pool managing
    # the sequences (Postgres only)
    maxOpenConns: 10
    # https://golang.org/pkg/database/sql/#DB.SetMaxIdleConns, default: 0
    # This has to be not more than maxOpenConns
    maxIdleConns: 0
    # The init block is used to pre-fill the database when its created or purged.
    init:
      # Path to base config file. If set, on a fresh install or after a purge this
      # file is used and preloaded into the base config. The format of the file is
      # JSON in API format. Defaults to "", which starts with an empty base
      # config. The empty base config uses defaults which are defined in
      # resources/baseconfig/baseconfig.yml. Unset keys (from a partial base
      # config file), are set to their defaults.
      configFile: ""
      # Inline base config. Works like configFile but used the inlined
      # baseconfig setting in this .yml file. Runs after configFile, so everything
      # in config overwrites settings from configFile. Default is empty.
      config: null
      # locations is a list of unique location by names.
      # If set, on a fresh install or after a purge this list is used and preloaded.
      # The list of locations is used to create secret values for the locations.
      # The secret values are then injected into the container environment.
      locations:
        - name: "assets"
          pathPrefix: ""
          allowPurge: false
          # mode determines how the storage location is used.
          # "originals" denotes the location as "originals" storage.
          # "versions" denotes the location as "version" storage.
          # "backups" denotes the location as "backup" storage.
          # A combination of "originals", "versions" and "backups" is possible. Simply separate them with a comma.
          mode: "originals"
          config:
            s3:
              bucket: fylr
              endpoint: "http://localhost:9000"
              accessKey: "minio"
              secretKey: "minio123"
              region: "us-east-1"
              useSSL: false

  plugin:
    # paths is a list of paths to search for plugins. Defaults to the plugins directories for easydb and fylr.
    paths:
      - /fylr/files/plugins/easydb
      - /fylr/files/plugins/fylr
    defaults:
      fylr_example:
        # enable, set to false to disable the plugin, defaults to true
        enabled: false
        # update_policy: automatic, always, never, defaults to automatic
        update: "never"
  elastic:
    # logger used for the elastic client
    # "Text": TextLogger prints the log message in plain text.
    # "Color": ColorLogger prints the log message in a terminal-optimized plain text.
    # "Curl": CurlLogger prints the log message as a runnable curl command.
    # "JSON": JSONLogger prints the log message as JSON.
    logger: "Text"
    # Where to find the Elastic search index settings. If you provide your own
    # file make sure to base it on the default
    # resources/index/index_settings.json which is included in the distribution.
    settings: ""
    # number of parallel workers to index documents, default to 1, set to 0 to disable
    parallel: 4
    # number of objects per job passed to the indexer process
    objectsPerJob: 100
    # limit of payloads sent to Elastic
    maxMem: 100mb
    # fielddata (debug feature). if set to true, fields are mapped including their fielddata
    # in the reverse index. with that, the inspect view of the indexed version of
    # the object shows a per field list of stored terms. This can be useful for debugging
    # of analyzer settings.
    fielddata: false
    # addresses of the elastic servers
    addresses:
      - "http://localhost:9200"
    # TODO: username and password must be set in the secret env config
    # username
    username: ""
    # password
    password: ""
  execserver:
    # number of parallel file workers, default to 1, set to 0 to disable
    parallel: 4
    # pluginJobTimeoutSec sets the maximum seconds a callback
    # is allowed to run. Defaults to 30 seconds.
    pluginJobTimeoutSec: 240
    # connectTimeout sets the maximum seconds the server will wait
    # until a worker gets a job. Defaults to 60 seconds.
    connectTimeoutSec: 240
  services:
    api:
      oauth2Server:
        # This secret is used to sign authorize codes, access and refresh
        # tokens. If unset, a random string is used. If multiple fylr server are
        # serving the same instance, the signingSecret needs to be configured.
        # The format is a 32-byte string.
        #    openssl rand -hex 16
        signingSecret: "d4b207ce131411ed8c7300155dd22658"
        # map with pre-configured client, use for the webapp
        clients:
          # client-id
          web-client:
            # clientSecret must be given as bcrypt hash
            clientSecret: $2y$12$3ULi66opx7/YjgDLmaKsQeoEJVtGSz6BTRUEqyPGK2SMRi0pNNwlO
            # this must point to the public URL or the webapp
            # ending in /oauth2/callback
            redirectURL: https://<external-url>/oauth2/callback
            # the scopes this client needs to be granted
            # offline is mandatory to issue refresh tokens
            # others will be used in rights management
            scopes: ["read", "write", "offline"]
    webapp:
      oauth2:
        # clientID used to connect to oauth2 server
        clientID: web-client
        # clientSecret must be provided in clear
        clientSecret: foo
      basicAuth: {}
