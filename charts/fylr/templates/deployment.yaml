apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fylr.fullname" . }}
  labels:
    {{- include "fylr.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fylr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fylr.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fylr.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["fylr"]
          args: [ "server", "-c", "config/fylr.yaml", "--env-prefix", "CFG_FYLR_"]
          ports:
            - name: webapp
              containerPort: 8080
              protocol: TCP
            - name: api
              containerPort: 8081
              protocol: TCP
            - name: backend
              containerPort: 8082
              protocol: TCP
          env:
            - name: CFG_FYLR_DB_DRIVER
              valueFrom:
                secretKeyRef:
                  name: fylr-db
                  key: "driver"
            - name: CFG_FYLR_DB_DSN
              valueFrom:
                secretKeyRef:
                  name: fylr-db
                  key: "dsn"
          # mount s3 secrets as env vars
          envFrom:
            - secretRef:
                name: {{ include "fylr.secret.s3.name" . }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
